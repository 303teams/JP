<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bjtu.dao.TeacherDao">


    <insert id="insert" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        insert into teacher(id,name,age,email,password,sex) values (#{id}, #{name},#{age},#{email},#{password},#{sex})
    </insert>

    <delete id="deleteByNum" parameterType="string">
        delete from teacher where id = #{num}
    </delete>

    <select id="findAll" resultType="Teacher">
        select * from teacher
    </select>

    <select id="findByNum" resultType="Teacher">
        select * from teacher where id = #{id}
    </select>

    <update id="updateInfo" parameterType="Teacher">
        update teacher set name = #{name},age = #{age},sex = #{sex}
        where id = #{id}
    </update>

    <select id="findCourse" resultType="java.util.Map" parameterType="string">
        SELECT course.*
        FROM teacher
        JOIN course ON teacher.id = course.tno
        WHERE teacher.id = #{id}
    </select>

    <select id="findHWbyCno" resultType="com.bjtu.pojo.Homework">
        SELECT
            H.*,
            COUNT(DISTINCT sc.sno) AS totalAmount,
            COUNT(DISTINCT C.sno) AS submitAmount
        FROM
            homework H
                JOIN sc ON H.cno = sc.cno
                LEFT JOIN content C ON H.homeworkID = C.homeworkID AND sc.sno = C.sno
        WHERE
            H.cno = #{cno}
        GROUP BY
            H.homeworkID, H.content, H.cno;

    </select>
    <select id="findCTByHId" resultType="com.bjtu.pojo.Content">
        SELECT DISTINCT c.contentID as contentID, s.id as sno, s.name as sname, c.submitTime as submitTime, c.score as score, c.filename as fileName
        FROM student s
                 JOIN sc ON s.id = sc.sno
                 LEFT JOIN content c ON s.id = c.sno AND c.homeworkID = #{homeworkId}
        WHERE sc.cno IN (SELECT homework.cno FROM homework WHERE homework.homeworkID = #{homeworkId})
           OR c.homeworkID IS NULL;

    </select>

    <update id="updateEmail">
        update teacher set email = #{email}
        where id = #{id}
    </update>

    <update id="updatePassword">
        update teacher set password = #{password}
        where id = #{id}
    </update>

    <!--    <select id="findByStudentNum" resultType="student">-->
    <!--        select * from student where sno = #{sno}-->
    <!--    </select>-->

    <!--    <select id="findByTeacherNum" resultType="teacher">-->
    <!--        select * from teacher where tno = #{tno}-->
    <!--    </select>-->

    <!--    <select id="findByAdminNum" resultType="admin">-->
    <!--        select * from admin where id = #{mno}-->
    <!--    </select>-->
</mapper>